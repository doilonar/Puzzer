#!/usr/bin/pythonimport socketimport structimport sysif len(sys.argv) != 2:    print "Usage: " + sys.argv[0] + " [port]"    sys.exit(1)MESSAGE="A"while len(MESSAGE) <= 1000000: #  may need to be increased based on your target buffer sizeDEST_IP = '127.0.0.1' # host your vulnPrograms is listening onDEST_PORT = int(sys.argv[1])counter=100        MESSAGE += ("A" * counter) #increasing the fuzz payload of A's.counter=counter+100 # 100 here is arbitrary, smaller will be more accurate but take longer.        print("length of fuzz overflow is ")print(len(MESSAGE)) # For educational purposesfor string in MESSAGE:def convert(MESSAGE):raw = ''# Server expects a "pre-fix" telling you the buffer size. This will help us troubleshoot in the serverterminal.raw += struct.pack("<I", len(MESSAGE))raw += MESSAGEreturn raw        # print(convert(MESSAGE))# test purposess = socket.socket(socket.AF_INET, socket.SOCK_STREAM)s.connect((DEST_IP, DEST_PORT))s.send(convert(MESSAGE))data = s.recv(1024)s.close()